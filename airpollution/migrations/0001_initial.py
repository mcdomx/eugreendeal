# Generated by Django 3.0.5 on 2020-05-13 16:29

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_group_description'),
    ]

    operations = [
        migrations.CreateModel(
            name='EUCountries',
            fields=[
                ('key', models.CharField(max_length=4, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='EUCountryCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_code', models.CharField(db_index=True, max_length=2)),
                ('country_name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Measurement',
            fields=[
                ('measurement', models.CharField(max_length=16, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='NutsRegions',
            fields=[
                ('key', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('year', models.CharField(db_index=True, max_length=4)),
                ('id', models.CharField(db_index=True, max_length=8)),
                ('LEVL_CODE', models.IntegerField(blank=True, db_index=True)),
                ('NUTS_ID', models.CharField(db_index=True, max_length=16)),
                ('CNTR_CODE', models.CharField(db_index=True, max_length=64)),
                ('NUTS_NAME', models.CharField(db_index=True, max_length=128)),
                ('FID', models.CharField(db_index=True, max_length=16)),
                ('EU_MEMBER', models.BooleanField()),
                ('geometry', models.CharField(max_length=4194304)),
            ],
        ),
        migrations.CreateModel(
            name='ObservationStation',
            fields=[
                ('air_quality_station', models.CharField(max_length=48, primary_key=True, serialize=False)),
                ('air_quality_network', models.CharField(max_length=48)),
                ('air_quality_station_eoicode', models.CharField(db_index=True, max_length=16)),
                ('air_quality_station_natcode', models.CharField(db_index=True, max_length=16)),
                ('projection', models.CharField(max_length=16)),
                ('longitude', models.FloatField()),
                ('latitude', models.FloatField()),
                ('altitude', models.FloatField()),
                ('air_quality_station_area', models.CharField(max_length=32)),
                ('country_code', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stations', to='airpollution.EUCountries')),
                ('nuts_1', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='nuts1_stations', to='airpollution.NutsRegions')),
                ('nuts_2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='nuts2_stations', to='airpollution.NutsRegions')),
                ('nuts_3', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='nuts3_stations', to='airpollution.NutsRegions')),
            ],
        ),
        migrations.CreateModel(
            name='Pollutant',
            fields=[
                ('key', models.CharField(max_length=16, primary_key=True, serialize=False)),
                ('copernicus_key', models.CharField(db_index=True, max_length=16, null=True)),
                ('observation_key', models.CharField(db_index=True, max_length=16, null=True)),
                ('eea_key', models.CharField(db_index=True, max_length=16, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Target',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit', models.CharField(max_length=16)),
                ('value', models.FloatField()),
                ('count_limit', models.IntegerField(null=True)),
                ('measurement', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='targets', to='airpollution.Measurement')),
                ('pollutant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='targets', to='airpollution.Pollutant')),
            ],
        ),
        migrations.CreateModel(
            name='SatelliteImageFiles',
            fields=[
                ('key', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('date', models.CharField(db_index=True, max_length=10)),
                ('date_time', models.DateTimeField(db_index=True, null=True)),
                ('description', models.CharField(max_length=64)),
                ('model', models.CharField(max_length=64)),
                ('category', models.CharField(max_length=10)),
                ('bbox_minlon', models.FloatField()),
                ('bbox_maxlon', models.FloatField()),
                ('bbox_minlat', models.FloatField()),
                ('bbox_maxlat', models.FloatField()),
                ('levels', models.CharField(max_length=64, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')])),
                ('hours', models.CharField(db_index=True, max_length=128, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')])),
                ('year', models.IntegerField(db_index=True)),
                ('month', models.IntegerField(db_index=True)),
                ('day', models.IntegerField(db_index=True)),
                ('shape', models.CharField(max_length=32, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')])),
                ('file_path', models.FileField(max_length=512, upload_to='satellite_files')),
                ('image', models.CharField(blank=True, max_length=3600000)),
                ('pollutant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='satellite_images', to='airpollution.Pollutant')),
            ],
        ),
        migrations.CreateModel(
            name='ObservationStationReading',
            fields=[
                ('key', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('date_time', models.DateTimeField()),
                ('air_quality_network', models.CharField(max_length=48)),
                ('value', models.FloatField()),
                ('unit', models.CharField(max_length=16)),
                ('validity', models.IntegerField()),
                ('verification', models.IntegerField()),
                ('air_quality_station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='airpollution.ObservationStation')),
                ('country_code', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='observations', to='airpollution.EUCountries')),
                ('pollutant', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='readings', to='airpollution.Pollutant')),
            ],
        ),
        migrations.CreateModel(
            name='EUStat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(db_index=True)),
                ('pollutant_name', models.CharField(db_index=True, max_length=20)),
                ('unit', models.CharField(max_length=20)),
                ('emissions', models.DecimalField(decimal_places=2, max_digits=6)),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='airpollution.EUCountryCode')),
            ],
        ),
        migrations.CreateModel(
            name='EurostatDataModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(db_index=True)),
                ('population', models.IntegerField()),
                ('nutsRegionStr', models.CharField(db_index=True, max_length=20)),
                ('nutsRegion', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='nuts2_population', to='airpollution.NutsRegions')),
            ],
        ),
        migrations.AddField(
            model_name='eucountries',
            name='nuts_region',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='EU_countries', to='airpollution.NutsRegions'),
        ),
        migrations.CreateModel(
            name='EEADataModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(db_index=True)),
                ('pollutant_name', models.CharField(db_index=True, max_length=20)),
                ('unit', models.CharField(max_length=20)),
                ('country', models.CharField(db_index=True, max_length=20)),
                ('sector', models.CharField(db_index=True, max_length=20)),
                ('sector_group', models.CharField(db_index=True, max_length=100)),
                ('emissions', models.DecimalField(decimal_places=2, max_digits=25)),
                ('country_code', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='eea_data', to='airpollution.NutsRegions')),
                ('pollutant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='eea_data', to='airpollution.Pollutant')),
            ],
        ),
        migrations.CreateModel(
            name='ChartViz',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chart_id', models.CharField(db_index=True, max_length=128)),
                ('url', models.CharField(blank=True, max_length=2048, null=True)),
                ('label', models.CharField(blank=True, max_length=2048, null=True)),
                ('groups', models.ManyToManyField(db_index=True, to='auth.Group')),
            ],
        ),
    ]
