"""
Django settings for eugreendeal project.

Generated by 'django-admin startproject' using Django 3.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import sys

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'td8!n-e#%=9tzz3r=drga)c3spa)-+fii@g=3g^eh_h-1+d37g'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'airpollution.apps.AirpollutionConfig',
    'django_extensions',
    'storages',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'eugreendeal.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'eugreendeal.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

if os.environ.get('WORKSPACE') == 'PROD':
    DATABASES = {
        'default': {
            # Uncomment this to use sqlite default db.
            # 'ENGINE': 'django.db.backends.sqlite3',
            # 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
            # 'TEST_NAME': os.path.join(BASE_DIR, 'db.sqlite3'),

           'ENGINE': 'django.db.backends.postgresql_psycopg2',
           'NAME': os.environ.get('DB_NAME', 'eugd_db'),
           'PORT': 5432,

            # AWS Settings:
            'USER': os.environ.get('DB_USER', 'eudbadmin'),
            'PASSWORD': os.environ.get('DB_PASSWORD', 'masterpassword'),
            'HOST': os.environ.get('DB_HOST', 'eugd-optimize.czlmuxrqabdj.us-east-1.rds.amazonaws.com'),
            'OPTIONS': {
                'connect_timeout': 120,
            }
        }
    }
else:
    DATABASES = {
        'default': {
            # Uncomment this to use sqlite default db.
            # 'ENGINE': 'django.db.backends.sqlite3',
            # 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
            # 'TEST_NAME': os.path.join(BASE_DIR, 'db.sqlite3'),

            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': os.environ.get('DB_NAME', 'eugd_db'),
            'PORT': 5432,

            # Local Docker Settings:
            'USER': os.environ.get('DB_USER', 'eudbuser'),
            'PASSWORD': os.environ.get('DB_PASSWORD', 'password'),
            # Change HOST IP based on your local docker machine IP
            'HOST': os.environ.get('DB_HOST', '0.0.0.0'),  # Docker
        }
    }

if 'test' in sys.argv: #and 'keepdb' in sys.argv
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
            'TEST_NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }
    }

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'

if os.environ.get('WORKSPACE') == 'PROD':
    AWS_STORAGE_BUCKET_NAME = 'django-static-eugd'
    AWS_S3_REGION_NAME = 'us-east-1'  # e.g. us-east-2
    AWS_ACCESS_KEY_ID = os.environ.get('AWS_ACCESS_KEY_ID')
    AWS_SECRET_ACCESS_KEY = os.environ.get('AWS_SECRET_ACCESS_KEY')

    # Tell django-storages the domain to use to refer to static files.
    AWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % AWS_STORAGE_BUCKET_NAME
    AWS_DEFAULT_ACL = None

    # Tell the staticfiles app to use S3Boto3 storage when writing the collected static files (when
    # you run `collectstatic`).
    STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
    STATIC_URL = 'https://django-static-eugd.s3.amazonaws.com/'


# Updated by: Mark McDonald
# Use local media folder storage for GRIB/NETCDF satellite images and maps
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(os.path.abspath(os.path.curdir), 'airpollution')
